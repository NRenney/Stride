
type _Streamable {
	typeName: "streamable"
	properties: [
		typeProperty InputName {
			name: "inputName"
			types: ["CSP", "none"]
			default: none
			required: off
		},
		typeProperty OutputName {
			name: "outputName"
			types: ["CSP", "none"]
			default: none
			required: off
		}
	]
	inherits: ["rated"]
}

type _Rated {
	typeName: "rated"
	properties: [
		typeProperty Rate {
			name: "rate"
			types: ["CIP", "CRP", ""]
			default: PlatformRate
			required: off
		},
		typeProperty Reset {
			name: "reset"
			types: [""] # Fix
			default: off
			required: off
		}
	]
	inherits: ["domainMember"] # TODO: Should we be able to say "_DomainMember" here instead?
}

type _DomainMember {
	typeName: "domainMember"
	properties: [
		typeProperty TypeName {
			name: "domain"
			types: ["CSP", ""]
			default: streamDomain
			required: on
		}
	]
	inherits: ["base"]
}

type _Base {
	typeName: "base"
	properties: [
		typeProperty Inherits {
			name: "inherits"
			types: ["CSP", ""]
			default: "base"
			required: off
		},
		typeProperty Meta {
			name: "meta"
			types: ["CSP"]
			default: ""
			required: off
		}
	]
	inherits: []
}
