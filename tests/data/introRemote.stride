
# Declare 'OSC' osc block
oscIn OSC_IN [2] {
hostIP:         '192.168.1.1'
incomingPort:   8000
incomingList:	['LPE', 'LPC']
meta:           none
}

switch LowPassEnable [2] {
default:	off
reset:		MasterReset
meta:		'Low pass bypass over OSC communication.'
}

signal LowPassCutoff [2] {
default:	100 
rate:		none
reset:		MasterReset
meta:		'Low pass cut-off frequency.'
}

OSC_IN[1] >> LowPassEnable;

OSC_IN[2]
>> Clip (
minimum:	80 
maximum:	2000
bypass:		off
)
>> Round (
mode:		Truncate
increment:	5
bypass:		off
)
>> LowPassCutoff;

AudioIn[1:2]
>> LowPass (
cutOff:	LowPassCutoff
reset:	off
bypass:	LowPassEnable
)
>> AudioOut[1:2];


# Declare 'SERIAL' serial block to enable communication over RS-232
serialIn SERIAL_IN [3] {
port:		'COM1'
baud:		115200
parity:		'none' 
dataBits:	8 
stopBits:	1
incomingList:	['LSE', 'LSC', 'LSG']
meta:           none
}

switch LowShelfEnable {
default:	off
reset:		MasterReset
meta:		'Low shelf bypass over serial communication.'
}

signal LowShelfCutoff {
default:	100 
rate:		none
reset:		MasterReset
meta:		'Low shelf cut-off frequency.'
}

signal LowShelfGain {
default:	0.0 
rate:		none
reset:		MasterReset
meta:		'Low shelf gain.'
}

SERIAL_IN[1] >> LowShelfEnable;

SERIAL_IN[2]
>> Clip (
minimum:	80 
maximum:	2000
bypass:		off
)
>> Round (
mode:		Truncate
increment:	5
bypass:		off
)
>> LowShelfCutoff;


SERIAL_IN[3]
>> Clip (
minimum:	-20.0
maximum:	20.0
bypass:		off
)
>> Round (
mode:		Truncate
increment:	0.1
bypass:		off
)
>> LowShelfGain;

AudioIn[1:2]
>> LowShelf (
cutOff:	LowShelfCutoff
gainDB:	LowShelfGain
bypass:	LowShelfEnable
)
>> AudioOut[1:2];

