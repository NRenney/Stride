#Example of ADSR driving frequency

constant FreqValue {
value:	440
meta:	none
}

signal FreqDeviation {
default:	0.0
rate:		1024
reset:		MasterReset
meta:		none
}

ADSR (
attack:		0.1
decay:		0.1
sustain:	0.5
release:	0.5
gate:		DigitalIn[1]
)
>> FreqDeviation; 

Oscillator (
type:		Sine
amplitude:	1.0
frequency:	FreqDeviation * FreqValue + FreqValue
phase:		0.0
reset:		off
)
>> AudioOut[1:2];


switch Trigger {
default:	off
reset:		MasterReset
meta:		none
}

constant FrequencyValue {
value:	440
meta:	none
}

signal Pulse {
default:	0.0
rate:		1024
reset:		MasterReset
meta:		none
}

PulseTrain (
dutyCycle: 	0.5
amplitude: 	1.0
frequency: 	1.0
phase: 		0.0
count:		none
reset:		off
)
>> Pulse
>> OnChange(
bypass: 	off
)
>> Trigger;

Oscillator (
type:		Sine
amplitude:	1.0
frequency:	FrequencyValue
phase:		0.0
reset:		Trigger
) 
>> AD (
attack:		0.1
decay:		0.1
trigger:	Trigger
)
>> AudioOut[1:2];

constant Fundamental {
value:	100.0
meta:	none
}

constant DurationScale {
value:	2.0
meta:	none
}

signal Envelope [4] {
default:	0.0
rate:		2048
reset:		MasterReset
meta:		none
}

ADSR (
attack:		[ 0.1 , 0.12, 0.14, 0.13 ] * DurationScale
decay:		[ 0.2 , 0.18, 0.14, 0.16 ] * DurationScale
sustain:	[ 0.66, 0,75, 0.44, 0.33 ]
release:	[ 0.4, 0.5, 0.2, 0.1] * DurationScale
gate:		DigitalIn[1]		
)
>> Map (
mode:		Linear
minimum:	0.0
maximum:	1.0
bypass:		off
)
>> Mix ()
>> Envelope;

Oscillator (
type:		Sine
amplitude:	[1.0, 1.2, 0.8 ,0.6] * Envelope
frequency:	[1.0, 2.0, 2.57, 2.66] * Fundamental
phase:		0.0
reset:		off
)
>> Level (
gainType:	Linear
gain:		0.2
bias:		0.0
bypass:		off
)
>> Mix ()
>> AudioOut[1:2];

Oscillator (
type:		Sine
amplitude:	[1.0, 1.2, 0.8, 0.6] * Envelope
frequency:	[1.0, 2.0, 2.57, 2.66]
phase:		0.0
reset:		DigitalIn[1]
)
>> Level (
gainType:	Linear
gain:		0.2
bias:		0.0
bypass:		off
)
>> Mix ()
>> AudioOut[1:2];

constant Fundamental {
value:	100.0
meta:	none
}

constant DurationScale{
value:	2.0
meta:	none
}

signal Envelope [4] {
default:	0.0
rate:		AudioRate
reset:		MasterReset
meta:		none
}

ADSR (
attack:		[ 0.1 , 0.12, 0.14, 0.13 ] * DurationScale
decay:		[ 0.2 , 0.18, 0.14, 0.16 ] * DurationScale
sustain:	[ 0.66, 0,75, 0.44, 0.33 ]
release:	[ 0.4, 0.5, 0.2, 0.1] * DurationScale
gate:		DigitalIn[1]		
)
>> Mix ()
>> Envelope;

Oscillator (
type:		Sine
amplitude:	[1.0, 1.2, 0.8, 0.6] * Envelope
frequency:	[1.0, 2.0, 2.57, 2.66] * Fundamental
phase:		0.0
reset:		DigitalIn[1]
)
>> Level (
gainType:	Linear
gain:		0.2
bias:		0.0
bypass:		off
)
>> Mix ()
>> AudioOut[1:2];


constant Fundamental {
value:	100.0
meta:	none
}

constant DurationScale {
value:	2.0
meta:	none
}

Oscillator (
type:		Sine
amplitude: 	ADSR (
			attack:		[ 0.1 , 0.12, 0.14, 0.13 ] * DurationScale
			decay:		[ 0.2 , 0.18, 0.14, 0.16 ] * DurationScale
			sustain:	[ 0.66, 0,75, 0.44, 0.33 ]
			release:	[ 0.4, 0.5, 0.2, 0.1] * DurationScale
			gate:		DigitalIn[1]		
		)
		* [1.0, 1.2, 0.8, 0.6]
frequency:	[1.0, 2.0, 2.57, 2.66] * Fundamental
phase:		0.0
reset:		DigitalIn[1]
)
>> Level (
gainType:	Linear
gain:		0.2
bias:		0.0
bypass:		off
)
>> Mix ()
>> AudioOut[1:2];

signal Envelope [4] {}

signal Pulse {}

switch Gate {}

sequencer Fundamental {
valueList:	[ 100., 200., 300., 400.]
mode:		Forward
repeat:		on
reset:		off
}

constant Duration {
value:	2.0
}

PulseTrain (
dutyCycle:	0.75
frequency:	1 / Duration
)
>> Pulse
>> OnChange()
>> Gate
>> Fundamental;

ADSR (
attack:		[ 0.1 , 0.12, 0.14, 0.13 ] * Duration
decay:		[ 0.2 , 0.18, 0.14, 0.16 ] * Duration
sustain:	[ 0.66, 0,75, 0.44, 0.33 ]
release:	[ 0.2, 0.25, 0.1, 0.05] * Duration
gate:		Gate		
)
>> Mix ()
>> Envelope;

Oscillator (
type:		Sine
amplitude:	[1.0, 1.2, 0.8, 0.6] * Envelope
frequency:	[1.0, 2.0, 2.57, 2.66] * Fundamental
phase:		0.0
reset:		Gate
)
>> Level (
gainType:	Linear
gain:		0.2
bias:		0.0
bypass:		off
)
>> Mix ()
>> AudioOut[1:2];