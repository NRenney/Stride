# Feedforward Comb Filter Implementation
AudioIn[1]
>> Delay (
samples:	32
default:	0.0
reset:		off
bypass:		off
)
>> Level(
gainType:	Linear	
gain: 		0.45
bias:		0.0
bypass:		off
)
>> Mix (
signalList:	AudioIn[1]
gainType:	Linear	
gainList:	0.5
biasList:	0.0
bypass:		off
)
>> AudioOut[1];


signal Feedback {
default:	0.0
rate:		AudioRate
reset:		MasterReset
meta:		none
}

# Feedback Comb Filter Implementation
Mix (
signalList:	[AudioIn[1], Feedback]
gainType:	Linear
gainList: 	[0.50, -0.45]
biasList: 	[0.0, 0.0] 
bypass:		off
) 
>> AudioOut[1]
>> Delay (
samples:	32
default:	0.0
reset:		off
bypass:		off
)
>> Feedback;

signal FeedForward {
default:	0.0
rate:		AudioRate
reset:		MasterReset
meta:		none
}

signal Feedback {
default:	0.0
rate:		AudioRate
reset:		MasterReset
meta:		none
}

# Allpass Filter Implementation 
AudioIn[1]
>> Mix (
signalList:	Feedback
gainType:	Linear
gainList:	-0.90
biasList:	0.0
bypass:		off
)
>> Feedforward
>> Delay (
samples:	32
default:	0.0
reset:		off
bypass:		off
)
>> Feedback
>> Mix (
signalList:	FeedForward
gainType:	Linear
gainList:	0.90
biasList: 	0.0
bypass:		off
)
>> Level (
gainType:	Linear	
gain: 		0.5
bias:		0.0
bypass:		off
)
>> AudioOut[1];

constant A [2] {
value:	[0.0, 0.0]
meta:	'Output difference polynomial coefficients.'
}

constant B [3] {
value:	[1.0, 0.0, 0.0]
meta:	'Input difference polynomial coefficients.'
}

signal Z [3] {
default:	0.0
rate:		AudioRate
reset:		MasterReset
meta:		none
}

AudioIn[1]
>> Mix (
signalList:	[Z[2], Z[3]]
gainType:	Linear
gainList:	[-A[1], -A[2]]
biasList:	[0.0, 0.0]
bypass:		off
)
>> Z[1]
>> Delay (
samples:	1
default:	0.0
reset:		off
bypass:		off
)
>> Z[2]
>> Delay (
samples:	1
default:	0.0
reset:		off
bypass:		off
)
>> Z[3]
>> Level (
gainType:	Linear
gain: 		B[3]
bias:		0.0
bypass:		off
)
>> Mix (
signalList:	[Z[2], Z[1]]
gainType:	Linear		
gainList:	[B[2], B[1]]
biasList:	[0.0, 0.0]
bypass:		off
)
>> AudioOut[1];


processor Biquad {
channelsIn:	1
channelsOut:	1
aliasList:	[ 'inputCoefficients', 'outputCoefficients' ]
propertyBlocks: [ constant B [3] {}, constant A [2] {}]
blocks:	[ signal Z [3] {}]
setup:		none
connections:	[ChannelIn[1]
>> Mix (
signalList:	[Z[2], Z[3]]
gainType:	Linear
gainList:	[-A[1], -A[2]]
biasList:	[0.0, 0.0]
bypass:		off
)
>> Z[1]
>> Delay (
samples:	1
default:	0.0
reset:		off
bypass:		off
)
>> Z[2]
>> Delay (
samples:	1
default:	0.0
reset:		off
bypass:		off
)
>> Z[3]
>> Level (
gainType:	Linear
gain: 		B[3]
bias:		0.0
bypass:		off
)
>> Mix (
signalList:	[Z[2], Z[1]]
gainType:	Linear		
gainList:	[B[2], B[1]]
biasList:	[0.0, 0.0]
bypass:		off
)
>> ChannelOut[1];
]
meta:		none
}

constant Y [2] {
value:	[0.0, 0.0]
meta:	'Output difference polynomial coefficients.'
}

constant X [3] {
value:	[1.0, 0.0, 0.0]
meta:	'Input difference polynomial coefficients.'
}

AudioIn[1] 
>> Biquad (
inputCoefficients: 	X
outputCoefficients:	Y
reset:			off
bypass: 		off
)
>>  AudioOut[1];
